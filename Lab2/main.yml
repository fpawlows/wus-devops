---
- name: Deploy a virtual machine on Azure
  hosts: localhost
  connection: local
  vars:
    resource_group: WUSLab2ResourceGroup
    vm_size: Standard_DS1_v2
    admin_username: azureuser
    admin_password: P@ssw0rd123!
    image_publisher: Canonical
    image_offer: UbuntuServer
    image_sku: 16.04-LTS
    deployments:
    - name: database
      subnet:
        port: 3306
        address_prefixes: "10.40.3.0/24"
        nsg_rules:
        - name: databaseRule
          priority: 900
          source_address_prefixes: "10.40.0.0/16"
          source_port_ranges: "*"
          destination_address_prefixes: "*"
          destination_port_ranges: 3306
      virtual_machine:
        private_ip_address: "10.40.3.8"
        public_ip: ''
        services:
        - name: database
          user: user
          password: password
    - name: backend
      subnet:
        port: 8080
        address_prefixes: "10.40.1.0/24"
        nsg_rules:
        - name: backendRule
          priority: 900
          source_address_prefixes: "*"
          source_port_ranges: "*"
          destination_address_prefixes: "*"
          destination_port_ranges: 8080
      virtual_machine:
        private_ip_address: "10.40.1.8"
        public_ip: backend
        services:
        - name: backend
          database_ip: "10.40.3.8"
          database_port: 3306
          database_user: user
          database_password: password
    - name: frontend
      subnet:
        port: 8080
        address_prefixes: "10.40.2.0/24"
        nsg_rules:
        - name: frontRule
          priority: 900
          source_address_prefixes: "*"
          source_port_ranges: "*"
          destination_address_prefixes: "*"
          destination_port_ranges: 8080
      virtual_machine:
        private_ip_address: "10.40.2.8"
        public_ip: frontend
        services:
        - name: frontend
          backend_address: backend
          backend_port: 8080

  tasks:
    # - name: Debug
    #   debug:
    #     var: deployments
    - name: Create a resource group
      azure.azcollection.azure_rm_resourcegroup:
        name: "{{ resource_group }}"
        location: westeurope
      register: rg_result

    - name: Create a virtual network
      azure.azcollection.azure_rm_virtualnetwork:
        resource_group: "{{ resource_group }}"
        name: "{{ resource_group }}Vnet"
        address_prefixes: "10.40.0.0/16"
      register: vnet_result

    - name: Create a public IP addresses
      azure.azcollection.azure_rm_publicipaddress:
        resource_group: "{{ resource_group }}"
        name: "{{item.name}}IP"
        allocation_method: Static
      register: public_ip_result
      loop: "{{deployments}}"
  
    - name: Gather public IPs
      set_fact:
        public_ips: "{{ public_ip_result.results | json_query('[].state.{name: name, ip_address: ip_address}') }}"
    
    - name: Create a network security group
      azure.azcollection.azure_rm_securitygroup:
        resource_group: "{{ resource_group }}"
        name: "{{item.name}}NSG"
        rules: #TODO - modularize
          - name: allow_ssh
            protocol: Tcp
            destination_port_range: "22"
            access: Allow
            direction: Inbound
            priority: 1000
      # register: nsg_result
      loop: "{{deployments}}"

    # - name: Create network security group rule
    #   azure_rm_securitygroup_rule:
    #     resource_group: "{{resource_group}}"
    #     name: "{{item.1.name}}"
    #     security_group_name: "{{ item.0.name}}NSG"
    #     protocol: Tcp
    #     destination_port_range: "{{item.1.destination_port_ranges}}"
    #     access: Allow
    #     direction: Inbound
    #     priority: "{{item.1.priority}}"
    #   loop: "{{ deployments|product(attribute='subnet.nsg_rules')|list}}"

    - name: Create a subnet
      azure.azcollection.azure_rm_subnet:
        resource_group: "{{ resource_group }}"
        name: "{{item.name}}Subnet"
        address_prefix: "{{ item.subnet.address_prefixes }}"
        virtual_network_name: "{{ resource_group }}Vnet"
      # register: subnet_result
      loop: "{{deployments}}"

    - name: Create a network interface
      azure.azcollection.azure_rm_networkinterface:
        resource_group: "{{ resource_group }}"
        name: "{{item.name}}NIC"
        virtual_network_name: "{{ resource_group }}Vnet"
        subnet_name: "{{item.name}}Subnet"
        public_ip_name: "{{item.name}}IP"
        security_group_name: "{{ item.name}}NSG"
      # register: nic_result
      loop: "{{deployments}}"


    - name: Create a virtual machine
      azure.azcollection.azure_rm_virtualmachine:
        resource_group: "{{ resource_group }}"
        name: "{{ item.name }}VM" 
        vm_size: "{{ vm_size }}"
        admin_username: "{{ admin_username }}"
        admin_password: "{{ admin_password }}"
        ssh_password_enabled: false
        ssh_public_keys:
        - path: "/home/{{ admin_username }}/.ssh/authorized_keys"
          key_data: "{{ lookup('file', '/home/maks/Lab2.pem.pub') }}"
        image:
          offer: "{{ image_offer }}"
          publisher: "{{ image_publisher }}"
          sku: "{{ image_sku }}"
          version: latest
        network_interfaces: "{{item.name}}NIC"
      loop: "{{deployments}}"
      register: vm_results
    
    - name: Print public IPs
      debug:
        var: public_ips

    


